{"ast":null,"code":"var _jsxFileName = \"/home/rutts07/IIITH_Files/DASS/Assignment1/frontend/src/routes/Register.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createStyles = makeStyles({\n  field: {\n    marginTop: 40,\n    marginBottom: 40\n  }\n});\n\nfunction RegisterVendors() {\n  _s();\n\n  const [managerName, setManagerName] = useState(\"\");\n  const [shopName, setShopName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // opening time of the shop\n\n  const [openHH, setOpenHH] = useState(\"\");\n  const [openMM, setOpenMM] = useState(\"\");\n  const [openAP, setOpenAP] = useState(\"\"); // close time of the shop\n\n  const [closeHH, setCloseHH] = useState(\"\");\n  const [closeMM, setCloseMM] = useState(\"\");\n  const [closeAP, setCloseAP] = useState(\"\");\n\n  const resetInputs = () => {\n    setManagerName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const [managerNameError, setManagerNameError] = useState(false);\n  const [shopNameError, setShopNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [contactError, setContactError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const useStyles = createStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (managerName == \"\") setManagerNameError(true);\n    if (shopName == \"\") setShopNameError(true);\n    if (email == \"\") setEmailError(true);\n    if (contact == \"\") setContactError(true);\n    if (password == \"\") setPasswordError(true);else {\n      const User = {\n        name: managerName,\n        email: email,\n        password: password\n      };\n      axios.post(\"http://localhost:5000/user/register\", User).then(response => {\n        alert(response.data.name + \" , you have been registered successfully !\");\n        console.log(response.data);\n      }).catch(err => {\n        alert(\"Account Already exists ! Please Login.\");\n\n        /*#__PURE__*/\n        _jsxDEV(Link, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n\n        console.log(err);\n      });\n      resetInputs();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      align: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      className: useStyles.field,\n      sx: {\n        borderRadius: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        style: ({\n          border: \"2px solid\"\n        }, {\n          minWidth: \"100vh\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: managerName,\n            size: \"small\",\n            onChange: e => setManagerName(e.target.value),\n            label: \"Manager Name\",\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: managerNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: shopName,\n            size: \"small\",\n            onChange: e => setShopName(e.target.value),\n            label: \"Shop Name\",\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: shopNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: email,\n            size: \"small\",\n            onChange: e => setEmail(e.target.value),\n            label: \"Email ID\",\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: contact,\n            size: \"small\",\n            onChange: e => setContact(e.target.value),\n            label: \"Contact\",\n            type: \"Number\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: contactError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [\"Opening Time :\", /*#__PURE__*/_jsxDEV(TextField, {\n              value: openHH,\n              disabled: true,\n              size: \"small\",\n              onChange: e => setOpenHH(e.target.value),\n              label: \"Select Batch\",\n              variant: \"outlined\",\n              color: \"primary\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: openMM,\n              disabled: true,\n              size: \"small\",\n              onChange: e => setOpenMM(e.target.value),\n              label: \"Select Batch\",\n              variant: \"outlined\",\n              color: \"primary\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: password,\n            size: \"small\",\n            onChange: e => setPassword(e.target.value),\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            color: \"primary\",\n            htmlFor: \"standard-adornment-password\",\n            required: true,\n            error: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterVendors, \"JgUkNs1tCYVi7M1ube8IOrNONW0=\");\n\n_c = RegisterVendors;\n\nfunction RegisterBuyers() {\n  _s2();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const minAge = 16;\n  const maxAge = 60;\n  const [batch, setBatch] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetInputs = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setContact(\"\");\n    setAge(\"\");\n    setBatch(\"\");\n    setPassword(\"\");\n  };\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [contactError, setContactError] = useState(false);\n  const [ageError, setAgeError] = useState(false);\n  const [batchError, setBatchError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const useStyles = createStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name == \"\") setNameError(true);\n    if (email == \"\") setEmailError(true);\n    if (contact == \"\") setContactError(true);\n    if (age == \"\" || age < minAge || age > maxAge) setAgeError(true);\n    if (batch == \"\") setBatchError(true);\n    if (password == \"\") setPasswordError(true);else {\n      const Buyer = {\n        name: name,\n        email: email,\n        contact: contact,\n        age: age,\n        batch: batch,\n        password: password\n      };\n      axios.post(\"http://localhost:5000/buyer/register\", Buyer).then(response => {\n        alert(response.data.name + \" , you have been registered successfully !\");\n        console.log(response.data);\n      }).catch(err => {\n        alert(\"Account Already exists ! Please Login.\");\n        console.log(err);\n      });\n      resetInputs();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      align: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      className: useStyles.field,\n      sx: {\n        borderRadius: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        style: ({\n          border: \"2px solid\"\n        }, {\n          minWidth: \"100vh\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: name,\n            size: \"small\",\n            onChange: e => setName(e.target.value),\n            label: \"Name\",\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: email,\n            size: \"small\",\n            onChange: e => setEmail(e.target.value),\n            label: \"Email ID\",\n            type: \"text\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: contact,\n            size: \"small\",\n            onChange: e => setContact(e.target.value),\n            label: \"Contact\",\n            type: \"Number\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: contactError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: age,\n            size: \"small\",\n            onChange: e => setAge(e.target.value),\n            InputProps: {\n              inputProps: {\n                min: 16,\n                max: 60\n              }\n            },\n            label: \"Age\",\n            type: \"Number\",\n            variant: \"outlined\",\n            color: \"primary\",\n            required: true,\n            error: ageError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              \"& > :not(style)\": {\n                m: 1\n              },\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              borderRadius: \"12px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: batch,\n              disabled: true,\n              size: \"small\",\n              onChange: e => setBatch(e.target.value),\n              label: \"Select Batch\",\n              variant: \"outlined\",\n              color: \"primary\",\n              required: true,\n              error: batchError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: function () {\n                setBatch(\"UG1\");\n              },\n              children: \"UG1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: function () {\n                setBatch(\"UG2\");\n              },\n              children: \"UG2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: function () {\n                setBatch(\"UG3\");\n              },\n              children: \"UG3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: function () {\n                setBatch(\"UG4\");\n              },\n              children: \"UG4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: function () {\n                setBatch(\"UG5\");\n              },\n              children: \"UG5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: password,\n            size: \"small\",\n            onChange: e => setPassword(e.target.value),\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            color: \"primary\",\n            htmlFor: \"standard-adornment-password\",\n            required: true,\n            error: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RegisterBuyers, \"9yHJDxcPZ05pKZMdeq08ZmxAogU=\");\n\n_c2 = RegisterBuyers;\nexport default function Register() {\n  _s3();\n\n  const [regBuy, setShowRegBuy] = useState(false);\n  const [regVen, setShowRegVen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      justifyContent: \"center\",\n      justifyItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        \"& > :not(style)\": {\n          m: 1\n        },\n        display: \"flex\",\n        justifyContent: \"center\",\n        justifyItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"extended\",\n        onClick: function () {\n          if (regBuy == false) {\n            if (regVen == true) setShowRegVen(false);\n            setShowRegBuy(true);\n          } else setShowRegBuy(false);\n        },\n        children: \"BUYERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        variant: \"extended\",\n        onClick: function () {\n          if (regVen == false) {\n            if (regBuy == true) setShowRegBuy(false);\n            setShowRegVen(true);\n          } else setShowRegVen(false);\n        },\n        children: \"VENDOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), regBuy ? /*#__PURE__*/_jsxDEV(RegisterBuyers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }, this) : null, regVen ? /*#__PURE__*/_jsxDEV(RegisterVendors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      align: \"center\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      sx: {\n        borderRadius: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        style: {\n          border: \"2px solid\",\n          borderColor: \"primary.main\",\n          borderRadius: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), \"\\u2003 Already have an account ? \\u2003\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"small\",\n            color: \"primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Register, \"rDcPXJTv4WFMD74XiAWZt+9bfxk=\");\n\n_c3 = Register;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegisterVendors\");\n$RefreshReg$(_c2, \"RegisterBuyers\");\n$RefreshReg$(_c3, \"Register\");","map":{"version":3,"sources":["/home/rutts07/IIITH_Files/DASS/Assignment1/frontend/src/routes/Register.js"],"names":["React","useState","axios","TextField","Grid","Button","makeStyles","Link","Box","Fab","createStyles","field","marginTop","marginBottom","RegisterVendors","managerName","setManagerName","shopName","setShopName","email","setEmail","contact","setContact","password","setPassword","openHH","setOpenHH","openMM","setOpenMM","openAP","setOpenAP","closeHH","setCloseHH","closeMM","setCloseMM","closeAP","setCloseAP","resetInputs","managerNameError","setManagerNameError","shopNameError","setShopNameError","emailError","setEmailError","contactError","setContactError","passwordError","setPasswordError","useStyles","handleSubmit","e","preventDefault","User","name","post","then","response","alert","data","console","log","catch","err","borderRadius","border","minWidth","target","value","RegisterBuyers","setName","age","setAge","minAge","maxAge","batch","setBatch","nameError","setNameError","ageError","setAgeError","batchError","setBatchError","Buyer","inputProps","min","max","m","alignItems","justifyContent","Register","regBuy","setShowRegBuy","regVen","setShowRegVen","justifyItems","display","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\n\nconst createStyles = makeStyles({\n  field: {\n    marginTop: 40,\n    marginBottom: 40,\n  },\n});\n\nfunction RegisterVendors() {\n  const [managerName, setManagerName] = useState(\"\");\n  const [shopName, setShopName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // opening time of the shop\n  const [openHH, setOpenHH] = useState(\"\");\n  const [openMM, setOpenMM] = useState(\"\");\n  const [openAP, setOpenAP] = useState(\"\");\n\n  // close time of the shop\n  const [closeHH, setCloseHH] = useState(\"\");\n  const [closeMM, setCloseMM] = useState(\"\");\n  const [closeAP, setCloseAP] = useState(\"\");\n\n  const resetInputs = () => {\n    setManagerName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const [managerNameError, setManagerNameError] = useState(false);\n  const [shopNameError, setShopNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [contactError, setContactError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const useStyles = createStyles();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (managerName == \"\") setManagerNameError(true);\n    if (shopName == \"\") setShopNameError(true);\n    if (email == \"\") setEmailError(true);\n    if (contact == \"\") setContactError(true);\n    if (password == \"\") setPasswordError(true);\n    else {\n      const User = {\n        name: managerName,\n        email: email,\n        password: password,\n      };\n\n      axios\n        .post(\"http://localhost:5000/user/register\", User)\n        .then((response) => {\n          alert(\n            response.data.name + \" , you have been registered successfully !\"\n          );\n          console.log(response.data);\n        })\n        .catch((err) => {\n          alert(\"Account Already exists ! Please Login.\");\n          <Link to=\"/login\"></Link>;\n          console.log(err);\n        });\n\n      resetInputs();\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <Grid\n        container\n        align=\"center\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        className={useStyles.field}\n        sx={{ borderRadius: 16 }}\n      >\n        <Grid\n          item\n          xs={8}\n          style={({ border: \"2px solid\" }, { minWidth: \"100vh\" })}\n        >\n          <form noValidate autoComplete=\"off\">\n            <TextField\n              value={managerName}\n              size=\"small\"\n              onChange={(e) => setManagerName(e.target.value)}\n              label=\"Manager Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={managerNameError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={shopName}\n              size=\"small\"\n              onChange={(e) => setShopName(e.target.value)}\n              label=\"Shop Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={shopNameError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={email}\n              size=\"small\"\n              onChange={(e) => setEmail(e.target.value)}\n              label=\"Email ID\"\n              type=\"text\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={emailError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={contact}\n              size=\"small\"\n              onChange={(e) => setContact(e.target.value)}\n              label=\"Contact\"\n              type=\"Number\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={contactError}\n            />\n            <br></br>\n            <br></br>\n            <Box>\n              Opening Time :\n              <TextField\n                value={openHH}\n                disabled\n                size=\"small\"\n                onChange={(e) => setOpenHH(e.target.value)}\n                label=\"Select Batch\"\n                variant=\"outlined\"\n                color=\"primary\"\n                required\n              />\n              <TextField\n                value={openMM}\n                disabled\n                size=\"small\"\n                onChange={(e) => setOpenMM(e.target.value)}\n                label=\"Select Batch\"\n                variant=\"outlined\"\n                color=\"primary\"\n                required\n              />\n            </Box>\n\n            <br></br>\n            <br></br>\n            <TextField\n              value={password}\n              size=\"small\"\n              onChange={(e) => setPassword(e.target.value)}\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              color=\"primary\"\n              htmlFor=\"standard-adornment-password\"\n              required\n              error={passwordError}\n            />\n          </form>\n          <br></br>\n          <Button\n            onClick={handleSubmit}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n          >\n            Sign Up\n          </Button>\n          <br></br>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nfunction RegisterBuyers() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n\n  const [age, setAge] = useState(\"\");\n  const minAge = 16;\n  const maxAge = 60;\n\n  const [batch, setBatch] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetInputs = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setContact(\"\");\n    setAge(\"\");\n    setBatch(\"\");\n    setPassword(\"\");\n  };\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [contactError, setContactError] = useState(false);\n  const [ageError, setAgeError] = useState(false);\n  const [batchError, setBatchError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const useStyles = createStyles();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name == \"\") setNameError(true);\n    if (email == \"\") setEmailError(true);\n    if (contact == \"\") setContactError(true);\n    if (age == \"\" || age < minAge || age > maxAge) setAgeError(true);\n    if (batch == \"\") setBatchError(true);\n    if (password == \"\") setPasswordError(true);\n    else {\n      const Buyer = {\n        name: name,\n        email: email,\n        contact: contact,\n        age: age,\n        batch: batch,\n        password: password,\n      };\n\n      axios\n        .post(\"http://localhost:5000/buyer/register\", Buyer)\n        .then((response) => {\n          alert(\n            response.data.name + \" , you have been registered successfully !\"\n          );\n          console.log(response.data);\n        })\n        .catch((err) => {\n          alert(\"Account Already exists ! Please Login.\");\n          console.log(err);\n        });\n\n      resetInputs();\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <Grid\n        container\n        align=\"center\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        className={useStyles.field}\n        sx={{ borderRadius: 16 }}\n      >\n        <Grid\n          item\n          xs={8}\n          style={({ border: \"2px solid\" }, { minWidth: \"100vh\" })}\n        >\n          <form noValidate autoComplete=\"off\">\n            <TextField\n              value={name}\n              size=\"small\"\n              onChange={(e) => setName(e.target.value)}\n              label=\"Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={nameError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={email}\n              size=\"small\"\n              onChange={(e) => setEmail(e.target.value)}\n              label=\"Email ID\"\n              type=\"text\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={emailError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={contact}\n              size=\"small\"\n              onChange={(e) => setContact(e.target.value)}\n              label=\"Contact\"\n              type=\"Number\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={contactError}\n            />\n            <br></br>\n            <br></br>\n            <TextField\n              value={age}\n              size=\"small\"\n              onChange={(e) => setAge(e.target.value)}\n              InputProps={{ inputProps: { min: 16, max: 60 } }}\n              label=\"Age\"\n              type=\"Number\"\n              variant=\"outlined\"\n              color=\"primary\"\n              required\n              error={ageError}\n            />\n            <br></br>\n            <br></br>\n            <Box\n              sx={{\n                \"& > :not(style)\": { m: 1 },\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: \"12px\",\n              }}\n            >\n              <TextField\n                value={batch}\n                disabled\n                size=\"small\"\n                onChange={(e) => setBatch(e.target.value)}\n                label=\"Select Batch\"\n                variant=\"outlined\"\n                color=\"primary\"\n                required\n                error={batchError}\n              />\n              <br></br>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={function () {\n                  setBatch(\"UG1\");\n                }}\n              >\n                UG1\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={function () {\n                  setBatch(\"UG2\");\n                }}\n              >\n                UG2\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={function () {\n                  setBatch(\"UG3\");\n                }}\n              >\n                UG3\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={function () {\n                  setBatch(\"UG4\");\n                }}\n              >\n                UG4\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={function () {\n                  setBatch(\"UG5\");\n                }}\n              >\n                UG5\n              </Button>\n            </Box>\n            <br></br>\n            <TextField\n              value={password}\n              size=\"small\"\n              onChange={(e) => setPassword(e.target.value)}\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              color=\"primary\"\n              htmlFor=\"standard-adornment-password\"\n              required\n              error={passwordError}\n            />\n          </form>\n          <br></br>\n          <Button\n            onClick={handleSubmit}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"success\"\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default function Register() {\n  const [regBuy, setShowRegBuy] = useState(false);\n  const [regVen, setShowRegVen] = useState(false);\n\n  return (\n    <Box\n      sx={{\n        justifyContent: \"center\",\n        justifyItems: \"center\",\n      }}\n    >\n      <Box\n        sx={{\n          \"& > :not(style)\": { m: 1 },\n          display: \"flex\",\n          justifyContent: \"center\",\n          justifyItems: \"center\",\n        }}\n      >\n        <Fab\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"extended\"\n          onClick={function () {\n            if (regBuy == false) {\n              if (regVen == true) setShowRegVen(false);\n              setShowRegBuy(true);\n            } else setShowRegBuy(false);\n          }}\n        >\n          BUYERS\n        </Fab>\n        <Fab\n          color=\"primary\"\n          variant=\"extended\"\n          onClick={function () {\n            if (regVen == false) {\n              if (regBuy == true) setShowRegBuy(false);\n              setShowRegVen(true);\n            } else setShowRegVen(false);\n          }}\n        >\n          VENDOR\n        </Fab>\n      </Box>\n      {regBuy ? <RegisterBuyers></RegisterBuyers> : null}\n      {regVen ? <RegisterVendors></RegisterVendors> : null}\n      <br></br>\n      <Grid\n        container\n        align=\"center\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        sx={{ borderRadius: 16 }}\n      >\n        <Grid\n          item\n          xs={10}\n          style={{\n            border: \"2px solid\",\n            borderColor: \"primary.main\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <br></br>\n          &emsp; Already have an account ? &emsp;\n          <Link to=\"/login\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"small\"\n              color=\"primary\"\n            >\n              Login\n            </Button>\n          </Link>\n          &emsp;\n          <br></br>\n          <br></br>\n        </Grid>\n      </Grid>\n      <br></br>\n      <br></br>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}